name: CI Automation Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup_and_test:
    runs-on: ubuntu-latest  # Using an Ubuntu Linux environment
    
    steps:
      # Step 1: Checkout the repository containing source code and test scripts
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup the environment (install dependencies)
      - name: Setup OS and Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl git python3 python3-pip
          sudo apt-get install -y python3-venv
          sudo apt-get install -y <other-dependencies>  # Replace with actual dependencies for your project

      # Step 3: Install Test Tools (including 'behave' for BDD testing)
      - name: Install Test Tools (Behave and others)
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt  # If using Python; replace with tool-specific commands (npm, yarn, etc.)
          pip install behave  # Installing behave for BDD testing

      # Step 4: Clone Additional Repositories (if necessary)
      - name: Clone Additional Repositories (if necessary)
        run: |
          git clone https://github.com/your/repository.git  # Replace with actual repo URLs

      # Step 5: Make setup_environment.sh executable
      - name: Make setup_environment.sh executable
        run: chmod +x steps/setup_environment.sh

      # Step 6: Debug - Check the contents of the steps directory
      - name: Debug - List files in steps directory
        run: ls -l steps/

      # Step 7: Debug - Display the content of setup_environment.sh
      - name: Debug - Display setup_environment.sh content
        run: cat steps/setup_environment.sh

      # Step 8: Setup Test Environment
      - name: Setup Test Environment
        run: |
          source steps/setup_environment.sh  # Custom environment setup script

      # Step 9: Run Tests
      - name: Run Tests
        run: |
          behave  # Running the BDD tests with behave

      # Step 10: Output the Test Results
      - name: Output Test Results
        run: |
          if [ -f result.log ]; then cat result.log; fi

      # Step 11: Check for Issues (optional)
      - name: Check for Issues
        run: |
          if grep -q "ERROR" result.log; then
            echo "Issues found in the test!";
            exit 1;
          else
            echo "No issues found.";
          fi
